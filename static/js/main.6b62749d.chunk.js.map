{"version":3,"sources":["components/Editor.js","components/Viewer.js","App.js","reportWebVitals.js","index.js"],"names":["Editor","props","mode","placeholder","theme","onChange","setHtmlValue","height","width","fontSize","name","setOptions","useWorker","editorProps","$blockScrolling","Viewer","outputValue","title","srcDoc","App","useState","htmlValue","setOutputValue","downloadLink","setDownloadLink","setTheme","className","style","border","onClick","prevState","download","href","dl","encodeURIComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAyBeA,EAlBA,SAAAC,GAEX,OACI,cAAC,IAAD,CACIC,KAAK,OACLC,YAAY,eACZC,MAAOH,EAAMG,MAAQ,kBAAoB,iBACzCC,SAAUJ,EAAMK,aAChBC,OAAO,QACPC,MAAM,OACNC,SAAU,GACVC,KAAK,SACLC,WAAY,CAAEC,WAAW,GACzBC,YAAa,CAAEC,iBAAiB,MCR7BC,EAVA,SAAAd,GACX,OACI,mCACKA,EAAMe,aACH,wBAASC,MAAM,OAAOT,MAAM,OAAOD,OAAO,OAAOW,OAAQjB,EAAMe,iBC+ChEG,MA7Cf,WAEE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBf,EAAlB,KACA,EAAsCc,mBAAS,IAA/C,mBAAOJ,EAAP,KAAoBM,EAApB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOhB,EAAP,KAAcqB,EAAd,KAgBA,OACE,gCACE,sBAAKC,UAAU,SAAf,UACE,qBAAKC,MAAO,CAACC,OAAQ,mBAAoBF,UAAU,yBAAnD,SACE,cAAC,EAAD,CAAQtB,MAAOA,EAAOE,aAAcA,MAEtC,qBAAKqB,MAAO,CAACC,OAAQ,mBAAoBF,UAAU,yBAAnD,SACE,cAAC,EAAD,CAAQV,YAAaA,SAGzB,uBACA,sBAAKU,UAAU,SAAf,UACE,wBAAQA,UAAU,uDAAuDG,QA1BxD,WACrBP,EAAeD,IAyBX,iBACA,wBAAQK,UAAU,uDAAuDG,QAjBpD,WACzBJ,GAAS,SAAAK,GAAS,OAAKA,MAgBnB,0BACA,mBACEJ,UAAU,uDACVK,SAAS,eACTC,KAAMT,EACNM,QA5BgB,WAEtB,IAAII,EAAE,wCAAoCC,mBAAmBb,IAC7DG,EAAgBS,IAqBZ,mCC/BOE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6b62749d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-noconflict/mode-html\";\r\nimport \"ace-builds/src-noconflict/theme-solarized_dark\";\r\nimport \"ace-builds/src-noconflict/theme-solarized_light\";\r\n\r\nconst Editor = props => {\r\n\r\n    return (\r\n        <AceEditor\r\n            mode=\"html\"\r\n            placeholder='Start Coding'\r\n            theme={props.theme ? 'solarized_light' : 'solarized_dark'}\r\n            onChange={props.setHtmlValue}\r\n            height=\"550px\"\r\n            width=\"100%\"\r\n            fontSize={18}\r\n            name=\"editor\"\r\n            setOptions={{ useWorker: false }}\r\n            editorProps={{ $blockScrolling: true }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Editor;","import React from 'react';\r\n\r\nconst Viewer = props => {\r\n    return (\r\n        <>\r\n            {props.outputValue && (\r\n                < iframe title=\"View\" width=\"100%\" height=\"100%\" srcDoc={props.outputValue}></iframe>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Viewer;","import './App.css';\nimport 'primeflex/primeflex.css';\n\nimport Editor from './components/Editor';\nimport Viewer from './components/Viewer';\n\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [htmlValue, setHtmlValue] = useState(\"\");\n  const [outputValue, setOutputValue] = useState(\"\");\n  const [downloadLink, setDownloadLink] = useState(\"\");\n  const [theme, setTheme] = useState(false);\n\n  const runCodeHandler = () => {\n    setOutputValue(htmlValue);\n  };\n\n  const saveCodeHandler = () => {\n    // update the download link state\n    let dl = `data:text/plain;charset=utf-8,${encodeURIComponent(htmlValue)}`;\n    setDownloadLink(dl);\n  };\n\n  const themeChangeHandler = () => {\n    setTheme(prevState => !prevState);\n  };\n\n  return (\n    <div>\n      <div className=\"p-grid\">\n        <div style={{border: '1px solid green'}} className=\"p-col-12 p-md-6 p-lg-6\">\n          <Editor theme={theme} setHtmlValue={setHtmlValue} />\n        </div>\n        <div style={{border: '1px solid green'}} className=\"p-col-12 p-md-6 p-lg-6\">\n          <Viewer outputValue={outputValue} />\n        </div>\n      </div>\n      <hr />\n      <div className=\"p-grid\">\n        <button className=\"run-button p-col-2 p-md-2 p-lg-2 p-d-block p-mx-auto\" onClick={runCodeHandler}>Run</button>\n        <button className=\"run-button p-col-2 p-md-2 p-lg-2 p-d-block p-mx-auto\" onClick={themeChangeHandler}>Switch Theme</button>\n        <a \n          className=\"run-button p-col-2 p-md-2 p-lg-2 p-d-block p-mx-auto\" \n          download='download.txt'\n          href={downloadLink}\n          onClick={saveCodeHandler}>Save your Code</a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}